.#{$mPrefix} {
  // Fill
  @if $mFill {
    &fill {
      @if $mFillColor {
        &-color {
          $_steps: $mFillColorShadesStep;
          $_limit: $mFillColorShadesLimit;

          @include loop-list-properties($mFillColorProperties) using ($_color) {
            &#{$mSeparator} {
              &#{$_color} {
                fill: variable(#{$_color}-main);

                @if $mFillColorShades {
                  @include loop-shades($_limit, $_steps) using ($_shade) {
                    fill: variable(#{$_color}-#{$_shade});
                  }
                }
              }

              @if $mFillColorOn {
                &on-#{$_color} {
                  fill: variable(#{$_color}-accent);

                  @if $mFillColorShades {
                    @include loop-shades($_limit, $_steps) using ($_shade) {
                      fill: variable(#{$_color}-on-#{$_shade});
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  // Stroke
  @if $mStroke {
    &stroke {
      @if $mStrokeColor {
        &-color {
          $_steps: $mStrokeColorShadesStep;
          $_limit: $mStrokeColorShadesLimit;

          @include loop-list-properties($mStrokeColorProperties) using ($_color) {
            &#{$mSeparator} {
              &#{$_color} {
                stroke: variable(#{$_color}-main);

                @if $mStrokeColorShades {
                  @include loop-shades($_limit, $_steps) using ($_shade) {
                    stroke: variable(#{$_color}-#{$_shade});
                  }
                }
              }

              @if $mStrokeColorOn {
                &on-#{$_color} {
                  stroke: variable(#{$_color}-accent);

                  @if $mStrokeColorShades {
                    @include loop-shades($_limit, $_steps) using ($_shade) {
                      stroke: variable(#{$_color}-on-#{$_shade});
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
