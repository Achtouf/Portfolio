@use "sass:math";

@mixin generate-color-shades(
  $_name,
  $_color,
  $_scheme: light,
  $_withDefault: false,
  $_withAlpha: false
) {
  $_max: ($colorShadesRange * 2) * $colorShadesStep;

  @if $_withDefault {
    @include set-variable($_name, generate-color-shade($_color, 0%));
  }

  @for $_index from $colorShadesBeginning to $_max {
    $_percentage: $_index * $colorShadesStep;
    $_shade: $_max - $_percentage;
    $_postfix: "-" + $_percentage;

    @if $_withAlpha {
      @include set-variable(
        #{$_name}#{$_postfix},
        #{generate-specific-color-shade-alpha($_color, math.div($_shade, 10))}
      );
    } @else {
      $_finalShade: $_shade * 1%;
      @if $_scheme == dark {
        $_finalShade: $_finalShade * -1;
      }
      @include set-variable(
        #{$_name}#{$_postfix},
        #{generate-color-shade($_color, $_finalShade)}
      );
    }
  }
}
