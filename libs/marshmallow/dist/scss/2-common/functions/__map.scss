@use "sass:map";
@use "sass:meta";

@function is-map($_object) {
  @return meta.type-of($_object) == "map";
}

@function is-map-empty($_object) {
  @return $_object == ();
}

@function map-contains($_map: (), $_key) {
  @return map.has-key($_map, $_key);
}

@function merge-map($_basic: (), $_add: ()) {
  @return map.deep-merge($_basic, $_add);
}

@function map-get($_map: (), $_key, $_default) {
  $_result: map.get($_map, $_key);
  $_result: $_default !default;
  @return $_result;
}

@function flatten-map($_map: (), $_prefix: "") {
  $_result: ();

  @each $_key, $_value in $_map {
    $_separator: $_prefix;
    @if not is-str-empty($_separator) {
      $_separator: #{$_separator}-;
    }
    $_separator: #{$_separator}#{$_key};

    @if is-map($_value) {
      $_result: merge-map($_result, flatten-map($_value, #{$_separator}));
    } @else {
      @if not is-null($_value) {
        $_result: map.set($_result, #{$_separator}, $_value);
      }
    }
  }

  @return $_result;
}

@function merge-flattened-map($_basic: (), $_add: ()) {
  $_result: merge-map(flatten-map($_basic), flatten-map($_add));
  @return $_result;
}
