.#{$mPrefix} {
  @if $mAnimation {
    &animate {
      // Name
      @if $mAnimationNames {
        &-name {
          @include loop-list-properties($mAnimationNamesProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-name: #{$mPrefix}#{$_prop};
            }
          }
        }
      }

      // Delay
      @if $mAnimationDelay {
        &-delay {
          @include loop-limit($mAnimationDelayLimit) using ($_index) {
            animation-delay: calc(#{variable(animation)} * #{$_index});
          }
        }
      }

      // Mode
      @if $mAnimationMode {
        &-mode {
          @include loop-list-properties($mAnimationModeProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-fill-mode: $_prop;
            }
          }
        }
      }

      // Duration
      @if $mAnimationDuration {
        &-duration {
          @include loop-limit($mAnimationDurationLimit) using ($_index) {
            animation-duration: calc(#{variable(animation)} * #{$_index});
          }
        }
      }

      // Timing functions
      @if $mAnimationTiming {
        &-timing {
          @include loop-list-properties($mAnimationTimingProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-timing-function: $_prop;
            }
          }
        }
      }

      // Direction
      @if $mAnimationDirection {
        &-dir {
          @include loop-list-properties($mAnimationDirectionProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-direction: $_prop;
            }
          }
        }
      }

      // Count
      @if $mAnimationCount {
        &-count {
          @include loop-limit($mAnimationCountLimit) using ($_index) {
            animation-iteration-count: $_index;
          }
        }
      }

      // Iteration
      @if $mAnimationIteration {
        &-iterate {
          @include loop-list-properties($mAnimationIterationProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-iteration-count: $_prop;
            }
          }
        }
      }

      // Play state
      @if $mAnimationPlayState {
        &-state {
          @include loop-list-properties($mAnimationPlayStateProperties) using ($_prop) {
            &#{$mSeparator}#{$_prop} {
              animation-play-state: $_prop;
            }
          }
        }
      }

      // Extra
      @if $mAnimationExtra {
        &-infinite {
          animation-iteration-count: infinite;
        }
      }
    }
  }
}

// Keyframes
#{$mPrefix} {
  @keyframes #{&}wave {
    0%,
    100% {
      transform: skew(variable(animation-wave-skew));
    }
    from {
      translate: calc(-1 * variable(animation-wave-translateX));
    }
    to {
      translate: calc(variable(animation-wave-translateX));
    }
  }

  @keyframes #{&}fade {
    to {
      opacity: variable(animation-fade-opacity);
    }
  }

  @keyframes #{&}spin {
    from {
      rotate: z 0turn;
    }
    to {
      rotate: z 1turn;
    }
  }

  @keyframes #{&}flash {
    100% {
      scale: variable(animation-flash-scale);
    }
  }

  @keyframes #{&}jump {
    100% {
      translate: 0 variable(animation-jump-translateY);
    }
  }
}
